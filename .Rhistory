# 2. Time Series Analysis
uber_reviews$review_date <- as.Date(uber_reviews$review_date)
plot2 <- ggplot(uber_reviews, aes(x = review_date)) +
geom_line(stat = "count") +
labs(title = "Number of Reviews Over Time", x = "Date", y = "Number of Reviews")
# 3. Top Positive/Negative Reviews
top_positive_reviews <- uber_reviews %>%
filter(rating == 5) %>%
arrange(desc(thumbs_up)) %>%
head(5)
top_negative_reviews <- uber_reviews %>%
filter(rating < 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
plot3 <- ggplot(rbind(top_positive_reviews, top_negative_reviews), aes(x = reorder(review_title, -thumbs_up), y = thumbs_up, fill = as.factor(rating))) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Positive/Negative Reviews by Thumbs-up Count", x = "Review Title", y = "Thumbs-up Count", fill = "Rating")
# 5. Sentiment Distribution
uber_reviews_sentiment <- inner_join(uber_reviews, bing) %>%
count(sentiment) %>%
mutate(sentiment = factor(sentiment, levels = c("negative", "neutral", "positive")))
data(bing)
# Plots
# 1. Rating Distribution
plot1 <- ggplot(uber_reviews, aes(x = rating)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Rating Distribution", x = "Rating", y = "Count")
# 2. Time Series Analysis
uber_reviews$review_date <- as.Date(uber_reviews$review_date)
plot2 <- ggplot(uber_reviews, aes(x = review_date)) +
geom_line(stat = "count") +
labs(title = "Number of Reviews Over Time", x = "Date", y = "Number of Reviews")
# 3. Top Positive/Negative Reviews
top_positive_reviews <- uber_reviews %>%
filter(rating == 5) %>%
arrange(desc(thumbs_up)) %>%
head(5)
top_negative_reviews <- uber_reviews %>%
filter(rating < 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
plot3 <- ggplot(rbind(top_positive_reviews, top_negative_reviews), aes(x = reorder(review_title, -thumbs_up), y = thumbs_up, fill = as.factor(rating))) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Positive/Negative Reviews by Thumbs-up Count", x = "Review Title", y = "Thumbs-up Count", fill = "Rating")
plot5 <- ggplot(uber_reviews_sentiment, aes(x = sentiment, y = n, fill = sentiment)) +
geom_bar(stat = "identity") +
labs(title = "Sentiment Distribution", x = "Sentiment", y = "Count") +
scale_fill_manual(values = c("negative" = "red", "neutral" = "gray", "positive" = "green"))
# Plots
# 1. Rating Distribution
plot1 <- ggplot(uber_reviews, aes(x = rating)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Rating Distribution", x = "Rating", y = "Count")
# 2. Time Series Analysis
uber_reviews$review_date <- as.Date(uber_reviews$review_date)
plot2 <- ggplot(uber_reviews, aes(x = review_date)) +
geom_line(stat = "count") +
labs(title = "Number of Reviews Over Time", x = "Date", y = "Number of Reviews")
# 3. Top Positive/Negative Reviews
top_positive_reviews <- uber_reviews %>%
filter(rating == 5) %>%
arrange(desc(thumbs_up)) %>%
head(5)
top_negative_reviews <- uber_reviews %>%
filter(rating < 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
plot3 <- ggplot(rbind(top_positive_reviews, top_negative_reviews), aes(x = reorder(review_title, -thumbs_up), y = thumbs_up, fill = as.factor(rating))) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Positive/Negative Reviews by Thumbs-up Count", x = "Review Title", y = "Thumbs-up Count", fill = "Rating")
# 6. Rating vs. Thumbs-up Scatterplot
plot6 <- ggplot(uber_reviews, aes(x = rating, y = thumbs_up)) +
geom_point(alpha = 0.5) +
labs(title = "Rating vs. Thumbs-up", x = "Rating", y = "Thumbs-up Count")
# Print the plots
print(plot1)
print(plot2)
print(plot3)
print(plot4)
# Plots
# 1. Rating Distribution
plot1 <- ggplot(uber_reviews, aes(x = rating)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Rating Distribution", x = "Rating", y = "Count")
# 2. Time Series Analysis
uber_reviews$review_date <- as.Date(uber_reviews$review_date)
plot2 <- ggplot(uber_reviews, aes(x = review_date)) +
geom_line(stat = "count") +
labs(title = "Number of Reviews Over Time", x = "Date", y = "Number of Reviews")
# 3. Top Positive/Negative Reviews
top_positive_reviews <- uber_reviews %>%
filter(rating == 5) %>%
arrange(desc(thumbs_up)) %>%
head(5)
top_negative_reviews <- uber_reviews %>%
filter(rating < 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
plot3 <- ggplot(rbind(top_positive_reviews, top_negative_reviews), aes(x = reorder(review_title, -thumbs_up), y = thumbs_up, fill = as.factor(rating))) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Positive/Negative Reviews by Thumbs-up Count", x = "Review Title", y = "Thumbs-up Count", fill = "Rating")
# 6. Rating vs. Thumbs-up Scatterplot
plot6 <- ggplot(uber_reviews, aes(x = rating, y = thumbs_up)) +
geom_point(alpha = 0.5) +
labs(title = "Rating vs. Thumbs-up", x = "Rating", y = "Thumbs-up Count")
# Print the plots
print(plot1)
print(plot2)
print(plot3)
print(plot6)
# 3. Top Positive/Negative Reviews
top_positive_reviews <- uber_reviews %>%
filter(rating > 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
top_negative_reviews <- uber_reviews %>%
filter(rating <= 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
plot3 <- ggplot(rbind(top_positive_reviews, top_negative_reviews), aes(x = reorder(review_title, -thumbs_up), y = thumbs_up, fill = as.factor(rating))) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Positive/Negative Reviews by Thumbs-up Count", x = "Review Title", y = "Thumbs-up Count", fill = "Rating")
print(plot1)
print(plot2)
print(plot3)
print(plot6)
View(top_positive_reviews)
plot3 <- ggplot(rbind(top_positive_reviews, top_negative_reviews), aes(x = reorder(review_title, -thumbs_up), y = thumbs_up, fill = as.factor(rating))) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Positive/Negative Reviews by Thumbs-up Count", x = "Review Title", y = "Thumbs-up Count", fill = "Rating")
print(plot3)
plot2
plot3
# Plots
# Rating Distribution
plot1 <- ggplot(uber_reviews, aes(x = rating)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Rating Distribution", x = "Rating", y = "Count")
plot1
# Plots
# Rating Distribution
plot1 <- ggplot(uber_reviews, aes(x = rating)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Rating Distribution", x = "Rating", y = "Count")
plot1
# 2. Time Series Analysis
uber_reviews$review_date <- as.Date(uber_reviews$review_date)
plot2 <- ggplot(uber_reviews, aes(x = review_date)) +
geom_line(stat = "count") +
labs(title = "Number of Reviews Over Time", x = "Date", y = "Number of Reviews")
plot2
#Top Positive/Negative Reviews
top_positive_reviews <- uber_reviews %>%
filter(rating = 5) %>%
arrange(desc(thumbs_up)) %>%
head(5)
#Top Positive/Negative Reviews
top_positive_reviews <- uber_reviews %>%
filter(rating == 5) %>%
arrange(desc(thumbs_up)) %>%
head(5)
top_negative_reviews <- uber_reviews %>%
filter(rating <= 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
plot3 <- ggplot(rbind(top_positive_reviews, top_negative_reviews), aes(x = reorder(review_title, -thumbs_up), y = thumbs_up, fill = as.factor(rating))) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Positive/Negative Reviews by Thumbs-up Count", x = "Review Title", y = "Thumbs-up Count", fill = "Rating")
plot3
#Top Positive/Negative Reviews
top_positive_reviews <- uber_reviews %>%
filter(rating == 5) %>%
arrange(desc(thumbs_up)) %>%
head(5)
top_negative_reviews <- uber_reviews %>%
filter(rating < 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
plot3 <- ggplot(rbind(top_positive_reviews, top_negative_reviews), aes(x = reorder(review_title, -thumbs_up), y = thumbs_up, fill = as.factor(rating))) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Positive/Negative Reviews by Thumbs-up Count", x = "Review Title", y = "Thumbs-up Count", fill = "Rating")
plot3
#Top Positive/Negative Reviews
top_positive_reviews <- uber_reviews %>%
filter(rating > 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
top_negative_reviews <- uber_reviews %>%
filter(rating < 3) %>%
arrange(desc(thumbs_up)) %>%
head(5)
plot3 <- ggplot(rbind(top_positive_reviews, top_negative_reviews), aes(x = reorder(review_title, -thumbs_up), y = thumbs_up, fill = as.factor(rating))) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Positive/Negative Reviews by Thumbs-up Count", x = "Review Title", y = "Thumbs-up Count", fill = "Rating")
plot3
library(Rcmdr)
View(uber_reviews_sorted)
View(uber_reviews_sorted)
View(uber_reviews_sorted)
View(uber_reviews_sorted)
View(uber_reviews_sorted)
print(plot6)
#Rating vs. Thumbs-up Scatterplot
plot6 <- ggplot(uber_reviews, aes(x = rating, y = thumbs_up)) +
geom_point(alpha = 0.5) +
labs(title = "Rating vs. Thumbs-up", x = "Rating", y = "Thumbs-up Count")
print(plot6)
get_sentiments("bing")
# Load the Bing lexicon
bing_lexicon <- get_sentiments("bing")
# Perform sentiment analysis by joining Uber reviews with the Bing lexicon
uber_reviews_sentiment <- inner_join(uber_reviews, bing_lexicon, by = c("review_description" = "word")) %>%
count(sentiment) %>%
mutate(sentiment = factor(sentiment, levels = c("negative", "neutral", "positive")))
# Print the first few rows of the resulting dataset
head(uber_reviews_sentiment)
plot5 <- ggplot(uber_reviews_sentiment, aes(x = sentiment, y = n, fill = sentiment)) +
geom_bar(stat = "identity") +
labs(title = "Sentiment Distribution", x = "Sentiment", y = "Count") +
scale_fill_manual(values = c("negative" = "red", "neutral" = "gray", "positive" = "green"))
plot5
# Developer Response Frequency Over Time
plot4 <- ggplot(developer_responses, aes(x = developer_response_date)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Developer Response Frequency Over Time", x = "Date", y = "Number of Responses")
View(uber_reviews_sorted)
# Developer Response Frequency Over Time
plot4 <- ggplot(uber_reviews$developer_responses, aes(x = uber_reviews$review_date)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Developer Response Frequency Over Time", x = "Date", y = "Number of Responses")
plot4
# Developer Response Frequency Over Time
plot4 <- ggplot(uber_reviews, aes(x = review_date)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Developer Response Frequency Over Time", x = "Date", y = "Number of Responses")
plot4
plot_developer_response <- ggplot(uber_reviews_with_responses, aes(x = developer_response_date)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Developer Response Frequency Over Time", x = "Date", y = "Number of Responses")
# Developer Response Frequency Over Time
uber_reviews_with_responses <- uber_reviews %>%
filter(!is.na(developer_response_date))
plot_developer_response <- ggplot(uber_reviews_with_responses, aes(x = developer_response_date)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Developer Response Frequency Over Time", x = "Date", y = "Number of Responses")
# Display the plot
print(plot_developer_response)
# Developer Response Frequency Over Time
uber_reviews_with_responses <- uber_reviews %>%
filter(!is.na(developer_response_date))
plot_developer_response <- ggplot(uber_reviews_with_responses, aes(x = developer_response_date)) +
geom_bar(stat = "count", fill = "skyblue", color = "black") +
labs(title = "Developer Response Frequency Over Time", x = "Date", y = "Number of Responses")
# Display the plot
print(plot_developer_response)
# Perform sentiment analysis on review descriptions
uber_reviews_sentiment <- inner_join(uber_reviews, bing_lexicon, by = c("review_description" = "word")) %>%
group_by(review_id) %>%
summarise(sentiment_score = sum(sentiment)) %>%
mutate(sentiment = case_when(
sentiment_score < 0 ~ "negative",
sentiment_score == 0 ~ "neutral",
sentiment_score > 0 ~ "positive"
)) %>%
select(review_id, sentiment)
View(uber_reviews_with_responses)
# Perform sentiment analysis on review descriptions
uber_reviews_sentiment <- inner_join(uber_reviews, bing_lexicon, by = c("review_description" = "word")) %>%
group_by(review_id) %>%
summarise(sentiment_score = sum(sentiment)) %>%
mutate(sentiment = case_when(
sentiment_score < 0 ~ "negative",
sentiment_score == 0 ~ "neutral",
sentiment_score > 0 ~ "positive"
)) %>%
select(review_id, sentiment)
# Perform sentiment analysis on review descriptions
uber_reviews_sentiment <- inner_join(uber_reviews, bing_lexicon, by = c("review_description" = "word")) %>%
group_by(review_id) %>%
summarise(sentiment_score = sum(as.numeric(sentiment), na.rm = TRUE)) %>%
mutate(sentiment = case_when(
is.na(sentiment_score) ~ NA_character_,
sentiment_score < 0 ~ "negative",
sentiment_score == 0 ~ "neutral",
sentiment_score > 0 ~ "positive"
)) %>%
select(review_id, sentiment)
# Add the sentiment column to the uber_reviews data frame
uber_reviews <- left_join(uber_reviews, uber_reviews_sentiment, by = "review_id")
View(uber_reviews_with_responses)
# Perform sentiment analysis on review descriptions
uber_reviews_sentiments <- inner_join(uber_reviews, bing_lexicon, by = c("review_description" = "word")) %>%
group_by(review_id) %>%
summarise(sentiment_score = sum(as.numeric(sentiment), na.rm = TRUE)) %>%
mutate(sentiment = case_when(
is.na(sentiment_score) ~ NA_character_,
sentiment_score < 0 ~ "negative",
sentiment_score == 0 ~ "neutral",
sentiment_score > 0 ~ "positive"
)) %>%
select(review_id, sentiment)
# Perform sentiment analysis on review descriptions
uber_reviews_sentiments <- inner_join(uber_reviews, bing_lexicon, by = c("review_description" = "word")) %>%
group_by(review_id) %>%
summarise(sentiment_score = sum(as.numeric(sentiment), na.rm = TRUE)) %>%
mutate(sentiment = case_when(
is.na(sentiment_score) ~ NA_character_,
sentiment_score < 0 ~ "negative",
sentiment_score == 0 ~ "neutral",
sentiment_score > 0 ~ "positive"
)) %>%
select(review_id, sentiment)
# Perform sentiment analysis on review descriptions
uber_reviews_sentiment <- inner_join(uber_reviews, bing_lexicon, by = c("review_description" = "word")) %>%
group_by(review_id) %>%
summarise(sentiment_score = sum(as.numeric(sentiment), na.rm = TRUE)) %>%
mutate(sentiment = case_when(
is.na(sentiment_score) ~ NA_character_,
sentiment_score < 0 ~ "negative",
sentiment_score == 0 ~ "neutral",
sentiment_score > 0 ~ "positive"
)) %>%
select(review_id, sentiment)
# Perform sentiment analysis on review descriptions
uber_reviews_sentiments <- inner_join(uber_reviews, bing_lexicon, by = c("review_description" = "word")) %>%
group_by(review_id) %>%
summarise(sentiment_score = sum(as.numeric(sentiment), na.rm = TRUE)) %>%
mutate(sentiment = case_when(
is.na(sentiment_score) ~ NA_character_,
sentiment_score < 0 ~ "negative",
sentiment_score == 0 ~ "neutral",
sentiment_score > 0 ~ "positive"
)) %>%
select(review_id, sentiment)
# Perform sentiment analysis on review descriptions
uber_reviews_sentiments <- inner_join(uber_reviews, bing_lexicon, by = c("review_description" = "word"))
View(uber_reviews_sentiments)
library(Rcmdr)
library(Rcmdr)
library(Rcmdr)
library(gridExtra)
library(tidytext)
library(tidytext)
library(topicmodels)
library(ggplot2)
library(gridExtra)
library(tidytext)
library(topicmodels)
install.packages(topicmodels)
install.packages("topicmodels")
library(ggplot2)
library(gridExtra)
library(tidytext)
library(topicmodels)
# Load the CSV file into a data frame
uber_reviews <- read.csv("Uber_Customer_Reviews.csv", header = TRUE)
ola_reviews <- read.csv("Ola_Customer_Reviews.csv", header = TRUE)
# Check the structure of the data frame
str(uber_reviews)
str(ola_reviews)
#Temporal Analysis (Time Series Analysis)
ola_reviews$review_date <- as.Date(ola_reviews$review_date)
plot_line_uber <- ggplot(ola_reviews, aes(x = review_date)) +
geom_line(stat = "count") +
labs(title = "(OLA) Number of Reviews Over Time", x = "Date", y = "Number of Reviews")
uber_reviews$review_date <- as.Date(uber_reviews$review_date)
plot_line_uber <- ggplot(uber_reviews, aes(x = review_date)) +
geom_line(stat = "count") +
labs(title = "(UBER) Number of Reviews Over Time", x = "Date", y = "Number of Reviews")
plot2
library(topicmodels)
library(ggplot2)
library(gridExtra)
library(tidytext)
library(dplyr)
library(topicmodels)
# Load the CSV file into a data frame
uber_reviews <- read.csv("Uber_Customer_Reviews.csv", header = TRUE)
ola_reviews <- read.csv("Ola_Customer_Reviews.csv", header = TRUE)
# Check the structure of the data frame
str(uber_reviews)
str(ola_reviews)
summary(uber_reviews)
summary(ola_reviews)
#Topic Modeling
#Uber
#Pre-process
clean_reviews <- uber_reviews %>%
mutate(review_description = tolower(review_description)) %>%
unnest_tokens(word, review_description) %>%
anti_join(stop_words)
# Document-Term Matrix
dtm <- clean_reviews %>%
count(review_id, word) %>%
cast_dtm(review_id, word, n)
# Topic Modeling
lda_model <- LDA(dtm, k = 5)
lda_model
#interpret topic
topics_uber <- tidy(lda_model, matrix = "beta")
install.packages("reshape2")
#interpret topic
topics_uber <- tidy(lda_model, matrix = "beta")
top_terms_uber <- topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
arrange(topic, -beta)
#interpret topic
topics_uber <- tidy(lda_model, matrix = "beta")
top_terms_uber <- topics_uber %>%
group_by(topic) %>%
top_n(10, beta) %>%
arrange(topic, -beta)
print(top_terms_uber)
topic_distribution_uber <- tidy(lda_model, matrix = "gamma")
#colnames(topic_distribution)[4] <- "company_name"
print(topic_distribution_uber)
#Sentiment Analysis
#Uber
#Pre-process
clean_reviews <- uber_reviews %>%
mutate(review_description = tolower(review_description)) %>%
unnest_tokens(word, review_description) %>%
anti_join(stop_words)
#Sentiment Analysis
#Uber
#Pre-process
clean_reviews_uber <- uber_reviews %>%
mutate(review_description = tolower(review_description)) %>%
unnest_tokens(word, review_description) %>%
anti_join(stop_words)
#Sentiment Lexicon
uber_sentiment_scores <- clean_reviews %>%
inner_join(get_sentiments("bing"))
#Sentiment Analysis
#Uber
#Pre-process
clean_reviews_uber <- uber_reviews %>%
mutate(review_description = tolower(review_description)) %>%
unnest_tokens(word, review_description) %>%
anti_join(stop_words)
#Sentiment Lexicon
uber_sentiment_scores <- clean_reviews_uber %>%
inner_join(get_sentiments("bing"))
# Aggregate Sentiment
uber_review_sentiment <- uber_sentiment_scores %>%
group_by(review_id) %>%
summarise(sentiment_score = sum(as.numeric(sentiment)))
dtm
clean_reviews
word_counts_dtm = uber_clean_reviews %>% count(X, word)
#Topic Modeling
#Uber
#Pre-process
uber_clean_reviews <- uber_reviews %>%
mutate(review_description = tolower(review_description)) %>%
unnest_tokens(word, review_description) %>%
anti_join(stop_words)
# Document-Term Matrix
dtm <- uber_clean_reviews %>%
count(review_id, word) %>%
cast_dtm(review_id, word, n)
word_counts_dtm = uber_clean_reviews %>% count(X, word)
uber_clean_reviews
word_counts_dtm = uber_clean_reviews %>% count(review_id, word)
word_counts_dtm
word_counts_dtm = uber_clean_reviews %>% count(review_id, word) %>% cast_dfm(review_id, word, n)
install.packages("quanteda")
library(quanteda)
word_counts_dtm = uber_clean_reviews %>% count(review_id, word) %>% cast_dfm(review_id, word, n)
word_counts_dtm
# check the top features in our dataset
topfeatures(word_counts_dtm, n = 20, scheme = "docfreq")
#Topic Modeling
#Uber
#Pre-process
uber_clean_reviews <- uber_reviews %>%
mutate(review_description = tolower(review_description)) %>%
unnest_tokens(word, review_description) %>%
anti_join(stop_words)
# Document-Term Matrix
uber_word_counts_dtm = uber_clean_reviews %>% count(review_id, word) %>% cast_dfm(review_id, word, n)
uber_word_counts_dtm
#OLa
#Pre-process
ola_clean_reviews <- ola_reviews %>%
mutate(review_description = tolower(review_description)) %>%
unnest_tokens(word, review_description) %>%
anti_join(stop_words)
# Document-Term Matrix
ola_word_counts_dtm = ola_clean_reviews %>% count(review_id, word) %>% cast_dfm(review_id, word, n)
ola_word_counts_dtm
# check the top features
topfeatures(uber_word_counts_dtm, n = 20, scheme = "docfreq")
topfeatures(ola_word_counts_dtm, n = 20, scheme = "docfreq")
# check the top features
print("Uber 20 Top Words")
topfeatures(uber_word_counts_dtm, n = 20, scheme = "docfreq")
print("Ola 20 Top Words")
topfeatures(ola_word_counts_dtm, n = 20, scheme = "docfreq")
#Word-topic probabilities
lda_model_uber <- LDA(uber_word_counts_dtm, k = 5)
lda_model_ola <- LDA(ola_word_counts_dtm, k = 5)
